0. What is the problem statement? 

You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

1. What new things did you learn, in as much detail as possible?

I learned that a nested loop is typically O(n^2) complexity, which makes intuitive sense to me as two loops are necessary to define and work over 2d objects, and 2d space is R^2.
I also learned that I should read a description of the algorithm and try to implement it myself, before I copy the solution directly. 
In the case of twosum, I learned that adding to a hashmap is faster because you only have to loop through the data once, and accessing things from a hashmap is a constant time operation.

